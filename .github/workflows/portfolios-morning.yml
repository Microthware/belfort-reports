name: Morning Portfolio Check (7am)

on:
  schedule:
    - cron: "0 11 * * 1-5"   # 7am ET during EDT
    - cron: "0 12 * * 1-5"   # 7am ET during EST
  workflow_dispatch:

permissions:
  contents: write

concurrency:
  group: morning-portfolios
  cancel-in-progress: true

jobs:
  gate:
    name: Gate (run only at 7am New York or manual)
    runs-on: ubuntu-latest
    env:
      OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
    outputs:
      should_run: ${{ steps.check.outputs.should_run }}
    steps:
      - id: check
        shell: bash
        run: |
          if [ "${{ github.event_name }}" = "workflow_dispatch" ]; then
            echo "should_run=true" >> "$GITHUB_OUTPUT"; exit 0; fi
          wd=$(TZ=America/New_York date +%u)  # 1..5 = Mon..Fri
          hr=$(TZ=America/New_York date +%H)  # 00..23
          if [ "$wd" -ge 1 ] && [ "$wd" -le 5 ] && [ "$hr" = "07" ]; then
            echo "should_run=true" >> "$GITHUB_OUTPUT"
          else
            echo "should_run=false" >> "$GITHUB_OUTPUT"
          fi

  portfolios:
    name: Build & publish morning gap-ups
    needs: gate
    if: ${{ needs.gate.outputs.should_run == 'true' }}
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"

      - name: Install deps (if any)
        shell: bash
        run: |
          if [ -f requirements.txt ]; then pip install -r requirements.txt; fi

      - name: Run dispatcher (portfolios only; writes report/portfolios.html)
        run: |
          python dispatcher.py --portfolios-only

      - name: Publish only portfolios.html to docs/
        shell: bash
        run: |
          mkdir -p docs
          if [ -f report/portfolios.html ]; then
            cp -f report/portfolios.html docs/portfolios.html
          else
            echo "::error ::report/portfolios.html not found after dispatcher run"; exit 1
          fi

      
      - name: Extract portfolios SECTIONS for overview
        shell: bash
        run: |
          python - << 'PY'
import re, json, os, io, sys
docs_pf = os.path.join('docs','portfolios.html')
os.makedirs('history', exist_ok=True)
out = os.path.join('history','portfolios_sections.json')
data = []
if os.path.exists(docs_pf):
    html = open(docs_pf,'r',encoding='utf-8').read()
    m = re.search(r"const\s+SECTIONS\s*=\s*(\[.*?\]);", html, re.S)
    if m:
        try:
            data = json.loads(m.group(1))
        except Exception as e:
            print("parse error:", e, file=sys.stderr)
open(out,'w',encoding='utf-8').write(json.dumps(data, indent=2))
print("wrote", out, "items:", len(data))
PY
- name: Commit and push changes
        shell: bash
        run: |
          BRANCH="${{ github.ref_name }}"
          git config user.name  "github-actions[bot]"
          git config user.email "41898282+github-actions[bot]@users.noreply.github.com"
          git add docs/portfolios.html docs/overview.html || true
          # include any updated history if your script writes it
          git add history/* 2>/dev/null || true
          git diff --staged --quiet || git commit -m "Morning gap-ups (auto) $(date -u +%F)"
          git pull --rebase origin "$BRANCH" || true
          git push origin HEAD:"$BRANCH"
