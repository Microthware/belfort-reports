name: Evening Report (5pm NY)

on:
  schedule:
    - cron: "0 21 * * 1-5"   # 5pm ET during EDT
    - cron: "0 22 * * 1-5"   # 5pm ET during EST
  workflow_dispatch:

permissions:
  contents: write

concurrency:
  group: evening-report
  cancel-in-progress: true

jobs:
  gate:
    name: Gate (run only at 5pm New York or manual)
    runs-on: ubuntu-latest
    outputs:
      should_run: ${{ steps.check.outputs.should_run }}
    steps:
      - id: check
        shell: bash
        run: |
          if [ "${{ github.event_name }}" = "workflow_dispatch" ]; then
            echo "should_run=true" >> "$GITHUB_OUTPUT"; exit 0; fi
          wd=$(TZ=America/New_York date +%u)
          hr=$(TZ=America/New_York date +%H)
          if [ "$wd" -ge 1 ] && [ "$wd" -le 5 ] && [ "$hr" = "17" ]; then
            echo "should_run=true" >> "$GITHUB_OUTPUT"
          else
            echo "should_run=false" >> "$GITHUB_OUTPUT"
          fi

  report:
    name: Build & publish evening report
    needs: gate
    if: ${{ needs.gate.outputs.should_run == 'true' }}
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"

      - name: Install deps (if any)
        shell: bash
        run: |
          if [ -f requirements.txt ]; then pip install -r requirements.txt; fi

      - name: Run dispatcher (generates report/)
        run: |
          python dispatcher.py

      - name: "Debug: list output"
        run: |
          pwd
          ls -la
          find . -maxdepth 2 -type d -print
          [ -d report ] && ls -la report || true

      - name: Publish report to docs (exclude gapups)
        shell: bash
        run: |
          mkdir -p docs
          if [ -d report ] && [ "$(ls -A report)" ]; then
            rsync -av --delete --exclude 'gapups.html' report/ docs/
          else
            echo "No report/ (or empty). Skipping rsync."
          fi

      - name: Commit and push changes
        shell: bash
        run: |
          BRANCH="${{ github.ref_name }}"
          git config user.name  "github-actions[bot]"
          git config user.email "41898282+github-actions[bot]@users.noreply.github.com"
          git add docs/ history/* || true
          # ensure gapups.html (from morning) isn't removed if nothing new replaces it
          git reset docs/gapups.html || true
          git diff --staged --quiet || git commit -m "Evening report update $(date -u +%F)"
          git pull --rebase origin "$BRANCH" || true
          git push origin HEAD:"$BRANCH"
